{"ast":null,"code":"const initialState = {\n  countries: [],\n  allCountries: [],\n  activities: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"GET_COUNTRIES\":\n      return {\n        ...state,\n        countries: action.payload,\n        allCountries: action.payload\n      };\n    case \"GET_NAME_COUNTRIES\":\n      return {\n        ...state,\n        countries: action.payload\n      };\n    case \"GET_ACTIVITIES\":\n      return {\n        ...state,\n        activities: action.payload\n      };\n    case \"POST_ACTIVITY\":\n      return {\n        ...state\n      };\n    case \"FILTER_BY_CONTINENT\":\n      const filterByContinent = state.allCountries;\n      const filteredContinent = action.payload === \"All\" ? filterByContinent : filterByContinent.filter(country => country.continent === action.payload);\n      return {\n        ...state,\n        countries: filteredContinent\n      };\n    case \"ALPHABETIC_ORDER\":\n      let sortedArr = action.payload === \"asc\" ? state.countries.sort((a, b) => {\n        if (a.name < b.name) {\n          return -1;\n        }\n        if (a.name > b.name) {\n          return 1;\n        }\n        return 0;\n      }) : state.countries.sort((a, b) => {\n        if (a.name < b.name) {\n          return 1;\n        }\n        if (a.name > b.name) {\n          return -1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        countries: sortedArr\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["initialState","countries","allCountries","activities","rootReducer","state","arguments","length","undefined","action","type","payload","filterByContinent","filteredContinent","filter","country","continent","sortedArr","sort","a","b","name"],"sources":["C:/Users/CASA/Desktop/Curso Henry/Individual-proyect---Henry/client/src/reducer/index.js"],"sourcesContent":["const initialState = {\r\n  countries: [],\r\n  allCountries: [],\r\n  activities: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_COUNTRIES\":\r\n      return {\r\n        ...state,\r\n        countries: action.payload,\r\n        allCountries: action.payload,\r\n      };\r\n\r\n    case \"GET_NAME_COUNTRIES\":\r\n      return {\r\n        ...state,\r\n        countries: action.payload,\r\n      };\r\n\r\n    case \"GET_ACTIVITIES\":\r\n      return {\r\n        ...state,\r\n        activities: action.payload,\r\n      };\r\n\r\n    case \"POST_ACTIVITY\":\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case \"FILTER_BY_CONTINENT\":\r\n      const filterByContinent = state.allCountries;\r\n      const filteredContinent =\r\n        action.payload === \"All\"\r\n          ? filterByContinent\r\n          : filterByContinent.filter(\r\n              (country) => country.continent === action.payload\r\n            );\r\n      return {\r\n        ...state,\r\n        countries: filteredContinent,\r\n      };\r\n\r\n    case \"ALPHABETIC_ORDER\":\r\n      let sortedArr =\r\n        action.payload === \"asc\"\r\n          ? state.countries.sort((a, b) => {\r\n              if (a.name < b.name) {\r\n                return -1;\r\n              }\r\n              if (a.name > b.name) {\r\n                return 1;\r\n              }\r\n              return 0;\r\n            })\r\n          : state.countries.sort((a, b) => {\r\n              if (a.name < b.name) {\r\n                return 1;\r\n              }\r\n              if (a.name > b.name) {\r\n                return -1;\r\n              }\r\n              return 0;\r\n            });\r\n      return {\r\n        ...state,\r\n        countries: sortedArr,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EACbC,YAAY,EAAE,EAAE;EAChBC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAClB,OAAO;QACL,GAAGL,KAAK;QACRJ,SAAS,EAAEQ,MAAM,CAACE,OAAO;QACzBT,YAAY,EAAEO,MAAM,CAACE;MACvB,CAAC;IAEH,KAAK,oBAAoB;MACvB,OAAO;QACL,GAAGN,KAAK;QACRJ,SAAS,EAAEQ,MAAM,CAACE;MACpB,CAAC;IAEH,KAAK,gBAAgB;MACnB,OAAO;QACL,GAAGN,KAAK;QACRF,UAAU,EAAEM,MAAM,CAACE;MACrB,CAAC;IAEH,KAAK,eAAe;MAClB,OAAO;QACL,GAAGN;MACL,CAAC;IAEH,KAAK,qBAAqB;MACxB,MAAMO,iBAAiB,GAAGP,KAAK,CAACH,YAAY;MAC5C,MAAMW,iBAAiB,GACrBJ,MAAM,CAACE,OAAO,KAAK,KAAK,GACpBC,iBAAiB,GACjBA,iBAAiB,CAACE,MAAM,CACrBC,OAAO,IAAKA,OAAO,CAACC,SAAS,KAAKP,MAAM,CAACE,OAAO,CAClD;MACP,OAAO;QACL,GAAGN,KAAK;QACRJ,SAAS,EAAEY;MACb,CAAC;IAEH,KAAK,kBAAkB;MACrB,IAAII,SAAS,GACXR,MAAM,CAACE,OAAO,KAAK,KAAK,GACpBN,KAAK,CAACJ,SAAS,CAACiB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC7B,IAAID,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;UACnB,OAAO,CAAC,CAAC;QACX;QACA,IAAIF,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;UACnB,OAAO,CAAC;QACV;QACA,OAAO,CAAC;MACV,CAAC,CAAC,GACFhB,KAAK,CAACJ,SAAS,CAACiB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC7B,IAAID,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;UACnB,OAAO,CAAC;QACV;QACA,IAAIF,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;UACnB,OAAO,CAAC,CAAC;QACX;QACA,OAAO,CAAC;MACV,CAAC,CAAC;MACR,OAAO;QACL,GAAGhB,KAAK;QACRJ,SAAS,EAAEgB;MACb,CAAC;IAEH;MACE,OAAOZ,KAAK;EAAC;AAEnB,CAAC;AACD,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}